CURRENT_BG='NONE'
PRIMARY_FG=black

# Characters
SEGMENT_SEPARATOR="\u2b80"
PLUSMINUS="\u00b1"
BRANCH="\u2b60"
DETACHED="\u2786"
CROSS="\u2718"
LIGHTNING="\u26a1"
GEAR="\u2699"

# Begin a segment
prompt_segment () {
  local bg fg
  [[ -n $1 ]] && bg="%K{1}" || bg="%k"
  [[ -n $2 ]] && fg="%K{2}" || bg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]
  then
    print -n "%{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%} "
  else
    print -n "%{$bg%}%{$fg%} "
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -Pn $3
}

prompt_end () {
  if [[ -n $CURRENT_BG ]]
  then
    print -n " %{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR"
  else
    print -n "%{%k%}"
  fi
  print -n "%{%f%}"
  CURRENT_BG=''
}

prompt_git() {
  local color ref
  is_dirty() {
    test -n "$(git status --porcelain --ignore-submodules)"
  }
  ref="$vcs_info_msg_0_"
  if [[ -n "$ref" ]]
  then
    if is_dirty
    then
      color=yellow
      ref="${ref} $PLUSMINUS"
    else
      color=green
      ref="${ref} "
    fi
    if [[ "${ref/.../}" == "$ref" ]]
    then
      ref="$BRANCH $ref"
    else
      ref="$DETACHED ${ref/.../}"
    fi
    prompt_segment $color $PRIMARY_FG
    print -Pn " $ref"
  fi
}

function build_prompt {
  prompt_segment black default '%(1?;%{%F{red}%}$CROSS ;)%(!;%{%F{yellow}%}$LIGHTNING ;)%(1j;%{%F{cyan}%}%j$GEAR ;)%{%F{blue}%}%n%{%F{red}%}@%{%F{green}%}%M'
  prompt_segment blue black '%2~'
  prompt_git
  prompt_end
}

function prompt_precmd {
  vcs_info
  PROMPT='
%{%f%b%k%}$(build_prompt)
 â€º '
}

function prompt_setup {
#  setopt LOCAL_OPTIONS
#  unsetopt XTRACE KSH_ARRAYS

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info
  
  prompt_opts=(cr percent subst)

  add-zsh-hook precmd prompt_precmd

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes false
  zstyle ':vcs_info:git*' formats '%b'
  zstyle ':vcs_info:git*' actionformats '%b (%a)'


 RPROMPT='[%D{%L:%M:%S %p}]'
 SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_setup "$@"
